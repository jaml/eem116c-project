------------------------------------------------------------------------------------------
Extensible Memory Benchmarking Tool (X-Mem) v2.4.2 for GNU/Linux on Intel x86-64
Build date: Fri Nov 18 10:55:37 PST 2016
Indicated compiler(s): GNU C/C++ (gcc/g++) 
(C) Microsoft Corporation 2015
Originally authored by Mark Gottscho <mgottscho@ucla.edu>
------------------------------------------------------------------------------------------


Verbose output enabled!
Benchmarking modes:
---> Throughput
---> Unloaded latency

Benchmark settings:
---> Random access:                   no
---> Sequential access:               yes
---> Use memory reads:                yes
---> Use memory writes:               yes
---> Chunk sizes:                     32 
---> Stride sizes:                    1 
---> Number of worker threads:        1
---> NUMA enabled:                    yes
------> CPU NUMA node affinities:     0 
------> Memory NUMA node affinities:  0 
---> Large pages:                     no
---> Iterations:                      1
---> Starting test index:             1

Working set per thread:               4096 B == 4 KB == 0 MB (1 pages)

This binary was built for the following OS and architecture capabilities: 
GNU/Linux
ARCH_INTEL
ARCH_INTEL_X86_64
ARCH_INTEL_SSE
ARCH_INTEL_SSE2
ARCH_AMD64
ARCH_64BIT
HAS_NUMA
HAS_LARGE_PAGES
HAS_WORD_64

This binary was built with the following compile-time options:
USE_OS_TIMER
USE_POSIX_TIMER
THROUGHPUT_BENCHMARK_BYTES_PER_PASS == 4096
EXT_DELAY_INJECTED_LOADED_LATENCY_BENCHMARK


These are the system type sizes:
short:                   2
int:                     4
long:                    8
long long:               8

unsigned short:          2
unsigned:                4
unsigned long:           8
unsigned long long:      8

int8_t:                  1
int16_t:                 2
int32_t:                 4
int64_t:                 8

uint8_t:                 1
uint16_t:                2
uint32_t:                4
uint64_t:                8

Word32_t:                4
Word64_t:                8

void*:                   8
uintptr_t:               8
size_t:                  8

Number of NUMA nodes: 1
Number of physical processor packages: 1
Number of physical processor cores: 0?
Number of logical processor cores: 1
Number of processor L1/L2/L3/L4 caches: 0?/0?/1/0? (guesses)
Regular page size: 4096 B
Large page size: 2097152 B

Testing thread affinities...
Locking to logical CPU 0...Pass      Unlocking...Pass

Initializing timer...done
Calculated timer frequency: 1000215000 Hz == 1000.22 MHz
Derived timer ns per tick: 0.999785


Virtual address for memory on NUMA node 0:
0x00007F4BC6302000 --- ALIGNED --> 0x00007F4BC6302000

Generating benchmarks.


-------- Running Benchmark: Test #1T (Throughput) ----------
CPU NUMA Node: 0
Memory NUMA Node: 0
Chunk Size: 32-bit
Access Pattern: forward sequential
Read/Write Mode: read
Number of worker threads: 1

Starting power measurement threads...done
Running benchmark.

Iter 1 had 28215296 passes in total across 1 threads, with 4096 bytes touched per pass:
...clock ticks in total across 1 threads == 4655128454 (adjusted by -345988340)
...ns in total across 1 threads == 4.65413e+09 (adjusted by -3.45914e+08)
...sec in total across 1 threads == 4.65413 (adjusted by -0.345914)
Stopping power measurement threads...done

*** RESULTS***

Iter #   0:    23681.345    MB/s


Mean: 23681.3 MB/s
Min: 23681.3 MB/s
25th Percentile: 23681.3 MB/s
Median: 23681.3 MB/s
75th Percentile: 23681.3 MB/s
95th Percentile: 23681.3 MB/s
99th Percentile: 23681.3 MB/s
Max: 23681.3 MB/s
Mode: 23681.3 MB/s



-------- Running Benchmark: Test #2T (Throughput) ----------
CPU NUMA Node: 0
Memory NUMA Node: 0
Chunk Size: 32-bit
Access Pattern: forward sequential
Read/Write Mode: write
Number of worker threads: 1

Starting power measurement threads...done
Running benchmark.

Iter 1 had 14534656 passes in total across 1 threads, with 4096 bytes touched per pass:
...clock ticks in total across 1 threads == 4824953146 (adjusted by -176218316)
...ns in total across 1 threads == 4.82392e+09 (adjusted by -1.7618e+08)
...sec in total across 1 threads == 4.82392 (adjusted by -0.17618)
Stopping power measurement threads...done

*** RESULTS***

Iter #   0:    11769.691    MB/s


Mean: 11769.7 MB/s
Min: 11769.7 MB/s
25th Percentile: 11769.7 MB/s
Median: 11769.7 MB/s
75th Percentile: 11769.7 MB/s
95th Percentile: 11769.7 MB/s
99th Percentile: 11769.7 MB/s
Max: 11769.7 MB/s
Mode: 11769.7 MB/s



Done running throughput benchmarks.

-------- Running Benchmark: Test #1L (Latency) ----------
CPU NUMA Node: 0
Memory NUMA Node: 0
Latency measurement chunk size: 64-bit
Latency measurement access pattern: random read (pointer-chasing)

Preparing a memory region under test. This might take a while...done

Starting power measurement threads...done
Running benchmark.

Iter 1 had 7610368 latency measurement passes, with 512 accesses per pass:
...lat clock ticks == 4986791502 (adjusted by -14451732)
...lat ns == 4.98572e+09 (adjusted by -1.44486e+07)
...lat sec == 4.98572 (adjusted by -0.0144486)

Stopping power measurement threads...done

*** RESULTS***

Iter #   0:    1.280 ns/access @    0.000 MB/s mean self-imposed load


Mean: 1.27954 ns/access and 0 MB/s mean imposed load (not necessarily matched)
Min: 1.27954 ns/access
25th Percentile: 1.27954 ns/access
Median: 1.27954 ns/access
75th Percentile: 1.27954 ns/access
95th Percentile: 1.27954 ns/access
99th Percentile: 1.27954 ns/access
Max: 1.27954 ns/access
Mode: 1.27954 ns/access



Done running latency benchmarks.
